"use strict";
var src_1 = require('../../../../src');
function run() {
    describe('ViewController', function () {
        afterEach(function () {
            if (subscription) {
                subscription.unsubscribe();
            }
        });
        describe('willEnter', function () {
            it('should emit LifeCycleEvent when called with component data', function (done) {
                // arrange
                var viewController = new src_1.ViewController(FakePage);
                subscription = viewController.willEnter.subscribe(function (event) {
                    // assert
                    expect(event).toEqual(null);
                    done();
                }, function (err) {
                    done(err);
                });
                // act
                viewController.fireWillEnter();
            }, 10000);
        });
        describe('didEnter', function () {
            it('should emit LifeCycleEvent when called with component data', function (done) {
                // arrange
                var viewController = new src_1.ViewController(FakePage);
                subscription = viewController.didEnter.subscribe(function (event) {
                    // assert
                    expect(event).toEqual(null);
                    done();
                }, function (err) {
                    done(err);
                });
                // act
                viewController.fireDidEnter();
            }, 10000);
        });
        describe('willLeave', function () {
            it('should emit LifeCycleEvent when called with component data', function (done) {
                // arrange
                var viewController = new src_1.ViewController(FakePage);
                subscription = viewController.willLeave.subscribe(function (event) {
                    // assert
                    expect(event).toEqual(null);
                    done();
                }, function (err) {
                    done(err);
                });
                // act
                viewController.fireWillLeave();
            }, 10000);
        });
        describe('didLeave', function () {
            it('should emit LifeCycleEvent when called with component data', function (done) {
                // arrange
                var viewController = new src_1.ViewController(FakePage);
                subscription = viewController.didLeave.subscribe(function (event) {
                    // assert
                    expect(event).toEqual(null);
                    done();
                }, function (err) {
                    done(err);
                });
                // act
                viewController.fireDidLeave();
            }, 10000);
        });
        describe('willUnload', function () {
            it('should emit LifeCycleEvent when called with component data', function (done) {
                // arrange
                var viewController = new src_1.ViewController(FakePage);
                subscription = viewController.willUnload.subscribe(function (event) {
                    expect(event).toEqual(null);
                    done();
                }, function (err) {
                    done(err);
                });
                // act
                viewController.fireWillUnload();
            }, 10000);
        });
        describe('destroy', function () {
            it('should emit LifeCycleEvent when called with component data', function (done) {
                // arrange
                var viewController = new src_1.ViewController(FakePage);
                subscription = viewController.didUnload.subscribe(function (event) {
                    // assert
                    expect(event).toEqual(null);
                    done();
                }, function (err) {
                    done(err);
                });
                // act
                viewController.destroy();
            }, 10000);
        });
    });
    var subscription = null;
    var FakePage = (function () {
        function FakePage() {
        }
        return FakePage;
    }());
}
exports.run = run;