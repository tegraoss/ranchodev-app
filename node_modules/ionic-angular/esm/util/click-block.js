var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

import { nativeTimeout } from './dom';
var CSS_CLICK_BLOCK = 'click-block-active';
var DEFAULT_EXPIRE = 330;
var cbEle = void 0;
var fallbackTimerId = void 0;
var isShowing = false;
/**
 * @private
 */
export var ClickBlock = function () {
    function ClickBlock() {
        _classCallCheck(this, ClickBlock);

        this._enabled = false;
    }

    _createClass(ClickBlock, [{
        key: 'enable',
        value: function enable() {
            cbEle = document.createElement('click-block');
            document.body.appendChild(cbEle);
            cbEle.addEventListener('touchmove', function (ev) {
                ev.preventDefault();
                ev.stopPropagation();
            });
            this._enabled = true;
        }
    }, {
        key: 'show',
        value: function show(shouldShow, expire) {
            if (this._enabled) {
                if (shouldShow) {
                    _show(expire);
                } else {
                    hide();
                }
            }
        }
    }]);

    return ClickBlock;
}();
function _show(expire) {
    clearTimeout(fallbackTimerId);
    fallbackTimerId = nativeTimeout(hide, expire || DEFAULT_EXPIRE);
    if (!isShowing) {
        cbEle.classList.add(CSS_CLICK_BLOCK);
        isShowing = true;
    }
}
function hide() {
    clearTimeout(fallbackTimerId);
    if (isShowing) {
        cbEle.classList.remove(CSS_CLICK_BLOCK);
        isShowing = false;
    }
}